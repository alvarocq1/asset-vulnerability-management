from gvm.connections import TLSConnection
from gvm.protocols.gmp import Gmp
from gvm.transforms import EtreeCheckCommandTransform
from gvm.errors import GvmResponseError

from config.config import *

def delete_all_tasks(gmp):
    try:
        tasks = gmp.get_tasks()
        task_ids = tasks.xpath('//task/@id')
        for task_id in task_ids:
            print(f"Deleting task ID: {task_id}")
            gmp.delete_task(task_id=task_id)
        print("All tasks deleted successfully.")
    except GvmResponseError as e:
        print(f"Failed to delete tasks: {e}")

def delete_all_targets(gmp):
    try:
        targets = gmp.get_targets()
        target_ids = targets.xpath('//target/@id')
        for target_id in target_ids:
            print(f"Deleting target ID: {target_id}")
            gmp.delete_target(target_id=target_id)
        print("All targets deleted successfully.")
    except GvmResponseError as e:
        print(f"Failed to delete targets: {e}")

def main():
    # Conectar a OpenVAS usando TLSConnection
    connection = TLSConnection(hostname=OPENVAS_HOST, port=OPENVAS_PORT)  # Cambia '192.168.1.36' por la IP de tu servidor OpenVAS
    transform = EtreeCheckCommandTransform()
    print("Connecting to OpenVAS...")
    with Gmp(connection=connection, transform=transform) as gmp:
        print("Authenticating...")
        gmp.authenticate(username=OPENVAS_USER, password=OPENVAS_PASSWORD)  # Cambia las credenciales seg√∫n corresponda

        # Eliminar todas las tareas
        delete_all_tasks(gmp)
        # Eliminar todos los objetivos
        delete_all_targets(gmp)

if __name__ == "__main__":
    main()
