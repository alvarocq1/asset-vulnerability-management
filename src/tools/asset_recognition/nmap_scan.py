import nmap
import psycopg2
from src.config.config import *

def scan_network():
    nm = nmap.PortScanner()
    # Especificamos las IPs a escanear
    target_hosts = ['192.168.1.160', '192.168.1.157']
    hosts_info = []
    
    for host in target_hosts:
        try:
            nm.scan(hosts=host, arguments='-O -F')  # -O para detectar el OS y -F para un escaneo rápido de puertos
        except nmap.PortScannerError as e:
            if 'requires root privileges' in str(e):
                print(f"Root privileges required for OS detection. Skipping OS detection for {host}")
                nm.scan(hosts=host, arguments='-F')  # Escaneo rápido de puertos sin detección de OS
            else:
                raise
        
        os_name = 'not detected'
        if 'osclass' in nm[host]:
            os_name = nm[host]['osclass'][0]['osfamily'] if 'osfamily' in nm[host]['osclass'][0] else 'not detected'
        elif 'osmatch' in nm[host] and len(nm[host]['osmatch']) > 0:
            os_name = nm[host]['osmatch'][0]['name']
        
        hostname = nm[host].hostname() if 'hostname' in nm[host] else 'Unknown'
        hosts_info.append((host, os_name, hostname))
        print(f"Host: {host} | OS: {os_name} | Hostname: {hostname}")
    
    return hosts_info

def store_assets(assets):
    try:
        conn = psycopg2.connect(
            dbname=DB_NAME,
            user=DB_USER,
            password=DB_PASSWORD,
            host=DB_HOST,
            port=DB_PORT
        )
        print("Database connection successful")
    except Exception as e:
        print(f"Database connection failed: {e}")
        return
    
    try:
        cur = conn.cursor()
        for asset in assets:
            cur.execute("""
                INSERT INTO assets (ip_address, os, hostname) 
                VALUES (%s, %s, %s) 
                ON CONFLICT (ip_address) 
                DO UPDATE SET os = EXCLUDED.os, hostname = EXCLUDED.hostname;
            """, asset)
        conn.commit()
        cur.close()
    except Exception as e:
        print(f"Error storing assets: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    assets = scan_network()
    store_assets(assets)
    print("Assets scanned and stored successfully.")
