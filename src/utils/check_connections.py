import psycopg2
from psycopg2 import OperationalError
from gvm.connections import TLSConnection
from gvm.protocols.gmp import Gmp
from gvm.transforms import EtreeCheckCommandTransform
from config.config import *
import subprocess

def check_postgresql_connection():
    try:
        conn = psycopg2.connect(
            dbname=DB_NAME,
            user=DB_USER,
            password=DB_PASSWORD,
            host=DB_HOST,
            port=DB_PORT
        )
        conn.close()
        print("PostgreSQL connection successful")
    except OperationalError as e:
        print(f"PostgreSQL connection failed: {e}")

def check_openvas_connection():
    try:
        connection = TLSConnection(hostname=OPENVAS_HOST, port=OPENVAS_PORT)
        transform = EtreeCheckCommandTransform()
        print("Connecting to OpenVAS...")
        with Gmp(connection=connection, transform=transform) as gmp:
            print("Authenticating...")
            gmp.authenticate(username=OPENVAS_USER, password=OPENVAS_PASSWORD)
            print("Authenticated successfully!")
            version = gmp.get_version()
            print(f"GVM version: {version}")
    except Exception as e:
        print(f"OpenVAS connection failed: {e}")

def check_metasploit_connection():
    try:
        result = subprocess.run(['/opt/metasploit-framework/bin/msfconsole', '-q', '-x', 'version; exit'], capture_output=True, text=True, timeout=30)
        if result.returncode == 0:
            print("Metasploit connection successful")
            print(result.stdout)
        else:
            print(f"Metasploit connection failed: {result.stderr}")
    except Exception as e:
        print(f"Metasploit connection failed: {e}")

def check_nmap_installed():
    try:
        result = subprocess.run(['nmap', '-v'], capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            print("nmap is installed")
        else:
            print("nmap is not installed or not working correctly")
    except FileNotFoundError:
        print("nmap is not installed")
    except Exception as e:
        print(f"An error occurred while checking nmap: {e}")

if __name__ == "__main__":
    check_postgresql_connection()
    check_openvas_connection()
    check_metasploit_connection()
    check_nmap_installed()
