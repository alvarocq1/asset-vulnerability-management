#!/usr/bin/env python3

import time
from gvm.connections import UnixSocketConnection
from gvm.protocols.gmp import Gmp
from gvm.transforms import EtreeCheckCommandTransform
from gvm.errors import GvmError

# Configuration
USER = 'admin'
PASS = 'admin'
SOCKET_PATH = '/run/gvm/gvmd.sock'  # Path to the Unix socket
SCAN_PROFILE = "Full and fast"
FORMAT = "PDF"
TARGET = '192.168.1.36'
ALIVE_TEST = 'ICMP, TCP-ACK Service & ARP Ping'
PORT_LIST_NAME = 'All IANA assigned TCP'

def create_target(gmp, target_name, target_ip, port_list_id):
    response = gmp.create_target(name=target_name, hosts=target_ip, port_list_id=port_list_id)
    return response.xpath('//@id')[0]

def create_task(gmp, task_name, config_id, target_id):
    response = gmp.create_task(name=task_name, config_id=config_id, target_id=target_id)
    return response.xpath('//@id')[0]

def start_task(gmp, task_id):
    response = gmp.start_task(task_id=task_id)
    return response.xpath('//@id')[0]

def get_task_status(gmp, task_id):
    response = gmp.get_tasks(task_id=task_id)
    return response.xpath('//task/status/text()')[0]

def get_report(gmp, report_id, format_id):
    response = gmp.get_report(report_id=report_id, format_id=format_id, details=True)
    return response

def main():
    try:
        # Connect to OpenVAS using UnixSocketConnection
        connection = UnixSocketConnection(path=SOCKET_PATH)
        transform = EtreeCheckCommandTransform()
        with Gmp(connection=connection, transform=transform) as gmp:
            print("Authenticating...")
            gmp.authenticate(username=USER, password=PASS)
            print("Connected and authenticated to OpenVAS")

            # Get scan profile ID
            configs = gmp.get_scan_configs()
            config_id = configs.xpath(f"//name[text()='{SCAN_PROFILE}']/../@id")[0]

            # Get report format ID
            formats = gmp.get_report_formats()
            format_id = formats.xpath(f"//name[text()='{FORMAT}']/../@id")[0]

            # Get port list ID
            port_lists = gmp.get_port_lists()
            port_list_id = port_lists.xpath(f"//name[text()='{PORT_LIST_NAME}']/../@id")[0]

            # Create target
            target_id = create_target(gmp, TARGET, TARGET, port_list_id)
            print(f"Target created with ID: {target_id}")

            # Create task
            task_id = create_task(gmp, TARGET, config_id, target_id)
            print(f"Task created with ID: {task_id}")

            # Start task
            report_id = start_task(gmp, task_id)
            print(f"Task started with report ID: {report_id}")

            # Wait for task to complete
            while True:
                status = get_task_status(gmp, task_id)
                if status in ['Done', 'Stopped']:
                    print("Scan completed")
                    break
                print(f"Task status: {status}")
                time.sleep(10)

            # Get the report
            report = get_report(gmp, report_id, format_id)
            report_path = f"openvas_report_{TARGET.replace('.', '_')}.pdf"
            with open(report_path, 'wb') as f:
                f.write(report.content)
            print(f"Report saved to {report_path}")

    except GvmError as e:
        print(f'An error occurred: {e}')

if __name__ == "__main__":
    main()
